{"version":3,"sources":["assets/bgImg/ContactMe.svg","pages/router.js","Layout/Header/index.jsx","components/canvasCom/index.jsx","components/ContractMe/index.tsx","utils/enums.ts","Layout/Sidebar/index.jsx","Layout/Content/index.jsx","Layout/Footer/index.jsx","Layout/index.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","routes","path","component","lazy","extra","Index","id","style","width","height","backgroundColor","Component","className","to","src","ContactMeIcon","alt","menus","url","icon","name","withRouter","props","pathname","location","map","item","index","key","onClick","console","log","history","push","background","children","BasicLayout","Sidebar","Content","Footer","App","fallback","exact","from","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d6894b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ContactMe.f7fa6232.svg\";","import React, { lazy } from \"react\";\nconst Home = lazy(() => import('./Home'));\nconst Archive = lazy(() => import('./Archive'));\nconst Tag = lazy(() => import('./Tag'));\nconst Classification = lazy(() => import('./Classification'));\nconst Calendar = lazy(() => import('./Calendar'));\nconst Friends = lazy(() => import('./Friends'));\nconst Laboratory = lazy(() => import('./Laboratory'));\nconst Search = lazy(() => import('./Search'));\nconst NotFound = lazy(() => import('./NotFound'));\nconst Login = lazy(() => import('./Login'));\n\nexport const routes = [\n    {\n        path: '/Home',\n        component: Home,\n        extra: true,\n    },\n    {\n        path: '/Archive',\n        component: Archive,\n        extra: true,\n    },\n    {\n        path: '/Tag',\n        component: Tag,\n        extra: true,\n    },\n    {\n        path: '/Classification',\n        component: Classification,\n        extra: true,\n    },\n    {\n        path: '/Calendar',\n        component: Calendar,\n        extra: true,\n    },\n    {\n        path: '/Friends',\n        component: Friends,\n        extra: true,\n    },\n    {\n        path: '/Laboratory',\n        component: Laboratory,\n        extra: true,\n    },\n    {\n        path: '/Search',\n        component: Search,\n        extra: true,\n    },\n    {\n        path: '/404',\n        component: NotFound,\n    },\n    {\n        path: '/Login',\n        component: Login,\n        extra: true,\n    },\n    // {\n    //     path: '',\n    //     component: ,\n    //     extra: true,\n    // },\n    // {\n    //     path: '',\n    //     component: ,\n    //     extra: true,\n    // },\n    // {\n    //     path: '',\n    //     component: ,\n    //     extra: true,\n    // },\n];\n","import React from 'react';\n\nfunction Index(props) {\n    return (\n        <ul>\n        </ul>\n    );\n}\n\nexport default Index;\n","import React, {Component} from 'react';\n\nclass Index extends Component {\n    render() {\n        return (\n            <div\n                id=\"jsi-particle-container\"\n                style={{\n                    width: '100%',\n                    height: '126px',\n                    backgroundColor: '#000',\n                }}\n            />\n        );\n    }\n}\n\nexport default Index;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './index.scss';\nimport ContactMeIcon from '../../assets/bgImg/ContactMe.svg';\n\nfunction Index() {\n    return (\n        <div className={'ContactMe'}>\n            <Link to='/Login'>\n                <div className={'contact-me-shawback'}>\n                </div>\n                {/*<Popover content={content} title=\"联系我\" trigger=\"click\">*/}\n                    <img\n                        src={ContactMeIcon}\n                        alt=\"contactMe\"\n                    />\n                {/*</Popover>*/}\n            </Link>\n        </div>\n    );\n}\n\nexport default Index;\n","// menus菜单\nexport const menus = [\n    {\n        url: '/Home',\n        icon: 'icon-home',\n        name: '首页',\n    },\n    {\n        url: '/Archive',\n        icon: 'icon-guidang',\n        name: '归档',\n    },\n    {\n        url: '/Classification',\n        icon: 'icon-jiugongge',\n        name: '分类',\n    },\n    {\n        url: '/Tag',\n        icon: 'icon-tag',\n        name: '标签',\n    },\n    {\n        url: '/Calendar',\n        icon: 'icon-richeng',\n        name: '日程表',\n    },\n    {\n        url: '/Friends',\n        icon: 'icon-world',\n        name: '朋友们',\n    },\n    {\n        url: '/Laboratory',\n        icon: 'icon-shiyan',\n        name: '实验室',\n    },\n    {\n        url: '/Search',\n        icon: 'icon-search',\n        name: '搜索',\n    },\n\n]\n","import React from 'react';\nimport { CanvasComponent } from '../../components';\nimport { withRouter } from \"react-router-dom\";\nimport { menus } from '../../utils/enums';\nimport '../index.scss';\nimport '../../assets/icon/iconfont.css';\n\nfunction Index(props) {\n    const pathname = props.location.pathname;\n    function toPage(url) {\n        console.log(props)\n        props.history.push(url);\n    }\n\n    return (\n        <div className='sidebarBox'>\n            <div className='sidebarTitle'>\n                <b>吴小迪的博客</b>\n                <p>在艰苦的环境中磨炼自己，方能变强！</p>\n            </div>\n            <nav className='sidbarNav'>\n                <ul className='menu'>\n                    {\n                        menus.map((item, index) => (\n                            <li\n                                key={index}\n                                onClick={() => toPage(item.url)}\n                                className={item.url === pathname ? 'currentItemBagColor' : ''}\n                            >\n                                <i className={`iconfont ${item.icon}`} />{item.name}\n                            </li>\n                        ))\n                    }\n                </ul>\n            </nav>\n            <div style={{ background: '#222', height: '20px', width: '100%' }} />\n            <div className='userInfo'>\n                <div className='userInfoTop'>\n                    <CanvasComponent />\n                    <p><b>吴小迪</b></p>\n                    <p>好想一辈子这样玩代码</p>\n                </div>\n                <div className='userInfoCenter'>\n                    <dl>\n                        <dt>327</dt>\n                        <dd>日志</dd>\n                    </dl>\n                    <dl>\n                        <dt>20</dt>\n                        <dd>分类</dd>\n                    </dl>\n                    <dl>\n                        <dt>14</dt>\n                        <dd>标签</dd>\n                    </dl>\n                </div>\n                <div className='userInfoBottom'>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Index);\n","import React from 'react';\nimport '../index.scss';\n\nfunction Index(props) {\n    return (\n        <div className='contentBox'>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Index;\n","import React from 'react';\n\nfunction Index(props) {\n    return (\n        <div className='footer'>\n            Copyright ©2019 wudi98.blog V0.1.1\n        </div>\n    );\n}\n\nexport default Index;\n","import React, {Fragment} from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\nimport Footer from './Footer';\nimport { ContractMe } from '../components/index';\nimport './index.scss';\n\nexport default function BasicLayout(props) {\n    return (\n        <Fragment>\n            <div style={{ background: '#fc6423', height: '4px', width: '100%' }} />\n            <div className=\"wrapBox\" id='wrapBox'>\n                <Sidebar></Sidebar>\n                <Content>\n                    {props.children}\n                    <Footer></Footer>\n                </Content>\n            </div>\n            <ContractMe />\n        </Fragment>\n    );\n}\n","import React, { Suspense } from 'react';\n// import { BrowserRouter as Router, Switch, Route, Link } from 'react-router';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { routes } from './pages/router';\nimport BasicLayout from \"./Layout\";\nimport { store } from './store';\n\nfunction App() {\n  return (\n      <Router>\n          <BasicLayout>\n              <Suspense fallback={<div>Loading...</div>}>\n                  <Switch>\n                      {\n                          routes.map((item, index) => (\n                              <Route\n                                  key={index}\n                                  exact={item.extra}\n                                  path={item.path}\n                                  component={item.component}\n                              />\n                          ))\n                      }\n                      <Redirect from='/' to='/Home' />\n                      <Redirect to='/404' />\n                  </Switch>\n              </Suspense>\n          </BasicLayout>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}